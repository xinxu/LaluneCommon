package lalune;

//和自动匹配服务的通信

message MatchRequest
{
	required uint32 game_type	= 1;
}

message GamePlayer
{
	required string name		= 1;
	required uint32 player_id	= 2;
}

message MatchResponse
{
	required bytes game_uuid	= 1;
	repeated GamePlayer players	= 2;
	required string game_server_ip	= 3;
	required uint32 game_server_port	= 4;
	required bytes access_token	= 5;
}

//和战斗服务之间的通信

message ConnectToGame //连接战斗服务器，access_token是用来验证的，相当于临时密码
{
	required uint32 player_uid	= 1;
	required bytes access_token	= 2;
}

message ConnectToGameResponse //临时方案
{
	required uint32 team	= 1;
}

message GameStart //启动游戏，并统一随机种子，及逻辑帧每帧时间
{
	required uint32 rand_seed	= 1;
	required uint32 time_per_frame	= 2;
}

message GameAction //客户端发是每次发一条
{
	optional bytes action_data	= 1;
	optional uint64 time_from_game_start	= 2; //客户端发过来的时候不填时间和player_id，服务端发过去的有时间和player_id
	optional uint32 player_uid	= 3;
}

message GameActions
{
    repeated GameAction  actions=1;
}




